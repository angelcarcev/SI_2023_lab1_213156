SI 2023 Lab1 213156 - Angel Carcev:

1.//////

2.//////

3./////

4.Се креира нов локален репозеториум со името како remote репозиториумот со командата mkdir и се влегува во него се влегува со командата cd и се иницијализира на git  со командата git init.

5. Потоа се поврзува со remote репозиториумот со командата git remote add origin https://github.com/angelcarcev/SI_2023_lab1_213156.git се поврзуваат локалниот и ремоте репозиториумите.

6.Со командата echo “Аngel Carcev 213156” >> README.md се креира ReadMe датотеката во која се потпишуваме. Потоа со командата git add . се stage-нува датотеката и со командата git commit -m "Initial commit" се комитнува.

7.Со командата echo >> SILab1.java се креира датотеката во која се копира содржината на класата. Потоа со командата git add . се stage-нува датотеката и со командата git commit -m "Add java class" се комитнува.

8.Со командата git push --all се синхронизираме со оддалечениот репозеториум.

9.Со командите git branch bug1 , git branch bug2, git branch bug3 се креираат 3 гранки.

10.Со командата git checkout bug1 се префрламе на гранката bug1.

11.Се поправа грешката со директно отварање на фајлот, потоа со командата git add . се stage-нува датотеката и со командата git commit -m " Fix wrong loop for reading" се комитнува. 

12.Со командата git checkout bug2 се префрламе на гранката bug2.

13.Се поправа грешката со директно отварање на фајлот, потоа со командата git add . се stage-нува датотеката и со командата git commit -m "Fix wrong condition in filterOddNumbers" се комитнува.

14.Со командата git checkout bug3 се префрламе на гранката bug3.

15.Се поправа грешката со директно отварање на фајлот, потоа со командата git add . се stage-нува датотеката и со командата git commit -m "Fix method sumEvenNumbers" се комитнува.

16.Со командата git push --all ги синхронизираме сите гранки со оддалечениот репозеториум.

17.Со командата git checkout master се префрламе на гранката master.

18.Со командата git merge bug1 се спојува гранката bug1 кон гранката master.

19.Со командата git push --all ги синхронизираме сите гранки со оддалечениот репозеториум.

20.Со командата git merge bug2 се спојува гранката bug2 кон гранката master.

21.Со командата git push --all ги синхронизираме сите гранки со оддалечениот репозеториум.

22.Со командата git checkout bug3 се префрламе на гранката bug3.

23.Со командата git rebase master, се прави rebase со гранката master.

24.Со командата git checkout master се префрламе на гранката master.

25.Со командата git merge bug3 се спојува гранката bug3 кон гранката master.

26.Со командата git push --all --force ги синхронизираме сите гранки со оддалечениот репозеториум.

27.Со командата echo >> logs.txt  се креира logs датотеката во која со командата git log го копираме нејзиниот излез во оваа текстуална датотека. Со командата echo >> 213156.txt  се креира 213156 датотеката во која водиме документација за сите команди и чекори направени во лабораторискава вежба. Потоа со командата git add . се stage-нуваат датотеките и со командата git commit -m "Final commit" се комитнува.

28.Со командата git push --all ги синхронизираме сите гранки со оддалечениот репозеториум.